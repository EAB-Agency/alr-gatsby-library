@use "sass:color";
@use "sass:math";
@use "styles/sass/foundation/config" as *;
@use "styles/sass/foundation/components" as *;


@mixin layout-apply2($sectionBgColor, $mq, $imgPosition) {
  background-color: $sectionBgColor;

  @media (min-width: $mq) {
    @if $imgPosition == "right" {
      >.center {
        grid-template-areas: "space apply gap image image";
      }
    } @else if $imgPosition == "left" {
      >.center {
        grid-template-areas: "image image gap apply space ";
      }
    }

    >.center {
      width: 100%;
      max-width: none;
      display: grid;
      grid-template-columns: 5% 1fr 3% 1fr 5%;

      &::after {
        content: "";
        display: block;
        width: 100%;
        height: 100%;
        grid-area: image;

        @content;
      }
    }


    .lp-apply-content {
      grid-area: apply;
    }
  }
}

// old code
.apply-v2 {
  .lp-apply {
    @include applyFormInlineEmail("(min-width: #{$mq-500}) and (max-width: #{$mq-800})");
    @include applyFormInlineEmail("(min-width: #{$mq-1200})");
    @include gridContentPadding(".lp-apply-content", 4vw 0, 6vw 0, $mq-800);
    @include sectionImageStacked("top", $c-black, 35vw, 18rem, right center, "img-woman-cafe-lg.jpg", $mq-800);

    @include layout-apply2($c-white, $mq-800, "right") {
      @include bgImage($c-black, right center, cover, "img-woman-cafe-lg.jpg");
    }
  }
}
