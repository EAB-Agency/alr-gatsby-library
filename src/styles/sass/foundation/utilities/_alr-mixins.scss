@use "sass:color";
@use "sass:math";
@use "breakpoints" as *;
@use "royall" as *;
@use "../config/variables" as *;

// ================
// ALR Supported Mixins
// ================

// Returns a rem units from pixel value
// Ex. font-size: rem(16); 
@function rem($pixels, $context: 16px) {
  @if (unitless($pixels)) {
    $pixels: $pixels * 1px;
  }
  @if (unitless($context)) {
    $context: $context * 1px;
  }
  @return $pixels / $context * 1rem;
}


// Grid Items Mixin (School Content Section)
@mixin gridItems (
  $_x-number: "null",
  $_mq-small: $mq-600,
  $_mq-large: $mq-1000,
  $_x-gridGapSmall: 1rem,
  $_x-gridGapLarge: 1.5rem
) {

  @media (max-width: maxMQ($_mq-small)) {
    li {
      ~ li {
        margin-top: $_x-gridGapLarge;
      }
    }
  }

  @media (min-width: $_mq-small) {
    display: grid;
    grid-gap: $_x-gridGapSmall;
    grid-template-columns: repeat(2, 1fr);

    @if $_x-number == "3" {
      grid-template-rows: repeat(auto, auto);

      li {
        &:last-child {
          grid-column: span 2;
        }
      }
    } @else if $_x-number == "4" {
      grid-template-rows: repeat(2, 1fr);
    } @else if $_x-number == "5" {
      grid-template-rows: repeat(3, 1fr);

      li {
        &:last-child {
          grid-column: span 2;
        }
      }
    } @else if $_x-number == "6" {
      grid-template-rows: repeat(3, 1fr);
    }
  }

  @media (min-width: $_mq-large) {
    grid-gap: $_x-gridGapLarge;

    @if $_x-number == "3" {
      grid-template-columns: repeat(3, 1fr);
      grid-template-rows: 1fr;

      li {
        &:last-child {
          grid-column: auto;
        }
      }
    } @else if $_x-number == "4" {
      grid-template-columns: repeat(4, 1fr);
      grid-template-rows: 1fr;
    } @else if $_x-number == "5" {
      grid-template-columns: repeat(6, 1fr);
      grid-template-rows: repeat(2, 1fr);

      li {
        grid-column: span 2;

        &:last-child {
          grid-column-end: -2;
        }

        &:nth-last-child(2) {
          grid-column-end: 4;
        }
      }
    } @else if $_x-number == "6" {
      grid-template-columns: repeat(3, 1fr);
      grid-template-rows: repeat(2, 1fr);
    }
  }
}

// Mixin to Grid Items with Image and Color Accent on Image
// as seen on https://go.cics.morgan.edu/apply top apply section (form, image, color behind image)
// - Lara - can delete if too specific
@mixin imageAccentGrid($_x-contentClass, $_mq-small, $_mq-breakPoint, $_x-gridRows, $_x-gridColumns, $_x-gridGapSmall, $_x-gridGapLarge, $_f-image, $_d-bgPosition: center, $_c-accentColor, $_x-gridColumnDirection, $_x-gridRowDirection, $_x-accentColorPlacement) {
  display: grid;
  grid-template-rows: $_x-gridRows;
  row-gap: $_x-gridGapSmall;
  position: relative;

  &::before,
  &::after {
    content: "";
    display: block;
    width: calc(100% - 1rem);
    height: calc(100% - 1rem);
  }

  &::before {
    background: url(#{$_f-image}) no-repeat $_d-bgPosition / cover;
    z-index: 2;
  }

  &::after {
    background: $_c-accentColor;
    position: absolute;
    z-index: 0;
  }

  @if $_x-gridColumnDirection == "bottom" {
    .#{$_x-contentClass} {
      grid-row: 1 / 2;
    }

    &::before,
    &::after {
      grid-row: 2 / 3;
    }
  } @else if $_x-gridColumnDirection == "top" {
    .#{$_x-contentClass} {
      grid-row: 2 / 3;
    }

    &::before,
    &::after {
      grid-row: 1 / 2;
    }
  }

  @if $_x-accentColorPlacement == "left" {
    &::before {
      margin: 0 0 0 auto;
    }

    &::after {
      top: 1rem;
      right: 1rem;
    }
  } @else if $_x-accentColorPlacement == "right" {
    &::before {
      margin: 0 auto 0 0;
    }

    &::after {
      top: 1rem;
      left: 1rem;
    }
  }

  @media (min-width: $_mq-small) {
    &::before,
    &::after {
      width: calc(100% - 2rem);
      height: calc(100% - 2rem);
    }

    @if $_x-accentColorPlacement == "left" {
      &::after {
        top: 2rem;
        right: 2rem;
      }
    } @else if $_x-accentColorPlacement == "right" {
      &::after {
        top: 2rem;
        left: 2rem;
      }
    }
  }

  @media (min-width: $_mq-breakPoint) {
    grid-template-columns: $_x-gridColumns;
    grid-template-rows: 1fr;
    column-gap: $_x-gridGapLarge;
    row-gap: 0;

    @if $_x-gridRowDirection == "right" {
      .#{$_x-contentClass} {
        grid-column: 1 / 2;
      }

      &::before,
      &::after {
        grid-column: 2 / 3;
        grid-row: 1 / 2;
      }
    } @else if $_x-gridRowDirection == "left" {
      .#{$_x-contentClass} {
        grid-column: 2 / 3;
      }

      &::before,
      &::after {
        grid-column: 1 / 2;
        grid-row: 1 / 2;
      }
    }
  }
}

// Mixin to Add Accent Bars to One Element
// as seen on https://go.cics.morgan.edu/discover around CG form
// - Lara - can delete if too specific
@mixin addAccentBars($_c-accentBarColor, $_c-accentBarSmall, $_c-accentBarLarge, $_x-contentClass, $_mq-small, $_mq-breakPoint) {
  @media (min-width: $_mq-small) {
    display: grid;
    grid-template-columns: $_c-accentBarSmall 1fr $_c-accentBarSmall;
    grid-template-rows: $_c-accentBarSmall 1fr $_c-accentBarSmall;

    &::before,
    &::after {
      content: "";
      display: block;
      background: $_c-accentBarColor;
    }

    // Right Side Bar
    &::before {
      width: $_c-accentBarSmall;
      height: 100%;
      grid-column: 3 / 4;
      grid-row: 2 / 4;
    }

    // Bottom Bar
    &::after {
      height: $_c-accentBarSmall;
      width: 100%;
      grid-column: 2 / 4;
      grid-row: 3 / 4;
    }

    .#{$_x-contentClass} {
      grid-column: 1 / 3;
      grid-row: 1 / 3;
    }
  }

  @media (min-width: $_mq-breakPoint) {
    grid-template-columns: $_c-accentBarLarge 1fr $_c-accentBarLarge;
    grid-template-rows: $_c-accentBarLarge 1fr $_c-accentBarLarge;

    // Right Side Bar
    &::before {
      width: $_c-accentBarLarge;
    }

    // Bottom Bar
    &::after {
      height: $_c-accentBarLarge;
    }
  }
}