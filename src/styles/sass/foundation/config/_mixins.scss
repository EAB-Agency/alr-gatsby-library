// ================
// Custom Mixins
// ================

@use "settings" as *;
@use "vendor/royall" as *;

// Button Color Mixin - (used on _buttons.scss)
// -- Update Colors with Brand Colors -- //
@mixin buttonColor(
  $_c-buttonColor: black,
  $_c-buttonHoverColor: white,
  $_c-buttonTextColor: white,
  $_c-buttonTextColorHover: black,
  $_c-buttonBorderColorIntial: black,
  $_c-buttonBorderColorHover: black
) {
  background: $_c-buttonColor;
  color: $_c-buttonTextColor;
  border: 1px solid $_c-buttonBorderColorIntial;

  &:hover,
  &:focus {
    background: $_c-buttonHoverColor;
    color: $_c-buttonTextColorHover;
    border: 1px solid $_c-buttonBorderColorHover;
  }
}

// @mixin pseudoImageAbove ($width: 100%, $height: 40vw) {
//   &::before {
//     content: '';
//     display: block;
//     width: $width;
//     height: $height;

//     @content;

//   }
// }

// general padding mixin for section
@mixin sectionPadding($paddingSm, $paddingLg) {
  padding: $paddingSm;

  @media (min-width: $mq) {
    padding: $paddingLg;
  }
}

// Use when pseudo image above section on small screens
@mixin stackedContentPadding($contentClass, $paddingSm, $paddingLg, $mq: $mq-800) {
  padding: 0;

  #{$contentClass} {
    padding: $paddingSm;
  }

  @media (min-width: $mq) {
    padding: $paddingLg;

    #{$contentClass} {
      padding: 0;
    }
  }
}

// Use when content gridded with image
@mixin gridContentPadding($contentClass, $paddingSm, $paddingLg, $mq: $mq-800) {
  padding: $paddingSm;

  @media (min-width: $mq) {
    padding: 0;

    #{$contentClass} {
      padding: $paddingLg;
    }
  }
}

@mixin bgImage($bgColor, $bgPosition: center center, $bgSize: cover, $fileName, $assetPath:"../../../../assets/images/") {
  background: $bgColor url(#{$assetPath}#{$fileName}) no-repeat $bgPosition / $bgSize;
}

@mixin sectionImageStackedToBg($imgBgColor, $imgHeight, $imgMaxHeight, $imgSmPosition: center center, $imgLgPosition: center center, $imgFileSm, $imgFileLg, $mq: $mq-800, $imgAssetPath: "../../../../assets/images/") {
  &::before {
    content: "";
    display: block;
    width: 100%;
    height: $imgHeight;
    max-height: $imgMaxHeight;
    background: $imgBgColor url(#{$imgAssetPath}#{$imgFileSm}) no-repeat $imgSmPosition / cover;
  }

  @media (min-width: $mq) {
    background: $imgBgColor url(#{$imgAssetPath}#{$imgFileLg}) no-repeat $imgLgPosition / cover;

    &::before {
      display: none;
    }
  }
}

@mixin sectionImageStacked($imgPosition, $imgBgColor, $imgHeight, $imgMaxHeight, $imgBgPosition: center center, $fileName, $maxMQ, $imgAssetPath: "../../../../assets/images/") {
  @media (max-width: maxMQ($maxMQ)) {
    @if $imgPosition == "top" {
      &::before {
        content: "";
        display: block;
        width: 100%;
        height: $imgHeight;
        max-height: $imgMaxHeight;
        background: $imgBgColor url(#{$imgAssetPath}#{$fileName}) no-repeat $imgBgPosition / cover;
      }
    } @else if $imgPosition == "bottom" {
      &::after {
        content: "";
        display: block;
        width: 100%;
        height: $imgHeight;
        max-height: $imgMaxHeight;
        background: $imgBgColor url(#{$imgAssetPath}#{$fileName}) no-repeat $imgBgPosition / cover;
      }
    }
  }
}

// Container Style Mixin
@mixin containerStyle(
  $_c-backgroundColor: white,
  $_x-border: "null",
  $_c-borderColor: "null",
  $_x-boxShadow: "null"
) {
  background: $_c-backgroundColor;

  @include fluidRem("padding", 1rem 1.25rem, 2rem 2.5rem);

  @if $_x-border == "yes" {
    border: 1px solid $_c-borderColor;
  }

  @if $_x-boxShadow == "yes" {
    box-shadow: 0 0 15px rgba($c-black, 0.2);
  }
}

// Grid Items Mixin (School Content Section)
@mixin gridItems(
  $_x-number: "null",
  $_mq-small: $mq-600,
  $_mq-large: $mq-1000,
  $_x-gridGapSmall: 1rem,
  $_x-gridGapLarge: 1rem
) {
  @media (min-width: $_mq-small) {
    display: grid;
    grid-gap: $_x-gridGapSmall;
    grid-template-columns: repeat(2, 1fr);

    @if $_x-number == "3" {
      grid-template-rows: repeat(auto, auto);

      li {
        &:last-child {
          grid-column: span 2;
        }
      }
    } @else if $_x-number == "4" {
      grid-template-rows: repeat(2, 1fr);
    } @else if $_x-number == "5" {
      grid-template-rows: repeat(3, 1fr);

      li {
        &:last-child {
          grid-column: span 2;
        }
      }
    } @else if $_x-number == "6" {
      grid-template-rows: repeat(3, 1fr);
    }
  }

  @media (min-width: $_mq-large) {
    grid-gap: $_x-gridGapLarge;

    @if $_x-number == "3" {
      grid-template-columns: repeat(3, 1fr);
      grid-template-rows: 1fr;

      li {
        &:last-child {
          grid-column: auto;
        }
      }
    } @else if $_x-number == "4" {
      grid-template-columns: repeat(4, 1fr);
      grid-template-rows: 1fr;
    } @else if $_x-number == "5" {
      grid-template-columns: repeat(6, 1fr);
      grid-template-rows: repeat(2, 1fr);

      li {
        grid-column: span 2;

        &:last-child {
          grid-column-end: -2;
        }

        &:nth-last-child(2) {
          grid-column-end: 4;
        }
      }
    } @else if $_x-number == "6" {
      grid-template-columns: repeat(3, 1fr);
      grid-template-rows: repeat(2, 1fr);
    }
  }
}

// Mixin to Grid Items with Image and Color Accent on Image
// as seen on https://go.cics.morgan.edu/apply top apply section (form, image, color behind image)
// - Lara - can delete if too specific
@mixin imageAccentGrid($_x-contentClass, $_mq-small, $_mq-breakPoint, $_x-gridRows, $_x-gridColumns, $_x-gridGapSmall, $_x-gridGapLarge, $_f-image, $_d-bgPosition: center, $_c-accentColor, $_x-gridColumnDirection, $_x-gridRowDirection, $_x-accentColorPlacement) {
  display: grid;
  grid-template-rows: $_x-gridRows;
  row-gap: $_x-gridGapSmall;
  position: relative;

  &::before,
  &::after {
    content: "";
    display: block;
    width: calc(100% - 1rem);
    height: calc(100% - 1rem);
  }

  &::before {
    background: url(#{$_f-image}) no-repeat $_d-bgPosition / cover;
    z-index: 2;
  }

  &::after {
    background: $_c-accentColor;
    position: absolute;
    z-index: 0;
  }

  @if $_x-gridColumnDirection == "bottom" {
    .#{$_x-contentClass} {
      grid-row: 1 / 2;
    }

    &::before,
    &::after {
      grid-row: 2 / 3;
    }
  } @else if $_x-gridColumnDirection == "top" {
    .#{$_x-contentClass} {
      grid-row: 2 / 3;
    }

    &::before,
    &::after {
      grid-row: 1 / 2;
    }
  }

  @if $_x-accentColorPlacement == "left" {
    &::before {
      margin: 0 0 0 auto;
    }

    &::after {
      top: 1rem;
      right: 1rem;
    }
  } @else if $_x-accentColorPlacement == "right" {
    &::before {
      margin: 0 auto 0 0;
    }

    &::after {
      top: 1rem;
      left: 1rem;
    }
  }

  @media (min-width: $_mq-small) {
    &::before,
    &::after {
      width: calc(100% - 2rem);
      height: calc(100% - 2rem);
    }

    @if $_x-accentColorPlacement == "left" {
      &::after {
        top: 2rem;
        right: 2rem;
      }
    } @else if $_x-accentColorPlacement == "right" {
      &::after {
        top: 2rem;
        left: 2rem;
      }
    }
  }

  @media (min-width: $_mq-breakPoint) {
    grid-template-columns: $_x-gridColumns;
    grid-template-rows: 1fr;
    column-gap: $_x-gridGapLarge;
    row-gap: 0;

    @if $_x-gridRowDirection == "right" {
      .#{$_x-contentClass} {
        grid-column: 1 / 2;
      }

      &::before,
      &::after {
        grid-column: 2 / 3;
        grid-row: 1 / 2;
      }
    } @else if $_x-gridRowDirection == "left" {
      .#{$_x-contentClass} {
        grid-column: 2 / 3;
      }

      &::before,
      &::after {
        grid-column: 1 / 2;
        grid-row: 1 / 2;
      }
    }
  }
}

// Mixin to Add Accent Bars to One Element
// as seen on https://go.cics.morgan.edu/discover around CG form
// - Lara - can delete if too specific
@mixin addAccentBars($_c-accentBarColor, $_c-accentBarSmall, $_c-accentBarLarge, $_x-contentClass, $_mq-small, $_mq-breakPoint) {
  @media (min-width: $_mq-small) {
    display: grid;
    grid-template-columns: $_c-accentBarSmall 1fr $_c-accentBarSmall;
    grid-template-rows: $_c-accentBarSmall 1fr $_c-accentBarSmall;

    &::before,
    &::after {
      content: "";
      display: block;
      background: $_c-accentBarColor;
    }

    // Right Side Bar
    &::before {
      width: $_c-accentBarSmall;
      height: 100%;
      grid-column: 3 / 4;
      grid-row: 2 / 4;
    }

    // Bottom Bar
    &::after {
      height: $_c-accentBarSmall;
      width: 100%;
      grid-column: 2 / 4;
      grid-row: 3 / 4;
    }

    .#{$_x-contentClass} {
      grid-column: 1 / 3;
      grid-row: 1 / 3;
    }
  }

  @media (min-width: $_mq-breakPoint) {
    grid-template-columns: $_c-accentBarLarge 1fr $_c-accentBarLarge;
    grid-template-rows: $_c-accentBarLarge 1fr $_c-accentBarLarge;

    // Right Side Bar
    &::before {
      width: $_c-accentBarLarge;
    }

    // Bottom Bar
    &::after {
      height: $_c-accentBarLarge;
    }
  }
}

// Mixin to Grid a Section into Two Columns Full Page Width
// as seen on https://go.success.marybaldwin.edu/apply-refresh

// Default is Apply Top Section on Apply LP
@mixin fullWidthTwoColSection(
  $_x-wrapperClass: lp-apply-wrapper,
  $_x-imagePositionStacked: "bottom",
  $_x-imagePositionHorz: "right",
  $_mq-breakpoint: $mq-800,
  $_mq-breakpointLg: $mq-1600,
  $_f-imageName: "img-family-tablet.jpg",
  $_x-imageBgPositionSm: center 52%,
  $_x-imageBgPositionMed: center 75%,
  $_x-imageBgPositionLg: center 52%,
  $_d-gridTempColumns: 5% 1fr 5% 1fr 5%,
  $_d-gridTempRows: 10vw 1fr 12vw,
  $_d-gridTempColumnsWide: 5% calc(#{$mq-1400} / 2) 5% calc(#{$mq-1400} / 2) auto
) {
  @if $_x-imagePositionStacked == "bottom" {
    padding: 4vw 0 0;

    &::after {
      content: "";
      display: block;
      width: 100%;
      height: 50vw;
      background: url(#{$_f-imageName}) no-repeat $_x-imageBgPositionSm / cover;
      margin-top: 2rem;
    }
  } @else if $_x-imagePositionStacked == "top" {
    padding: 0 0 4vw;

    &::before {
      content: "";
      display: block;
      width: 100%;
      height: 50vw;
      background: url(#{$_f-imageName}) no-repeat $_x-imageBgPositionSm / cover;
      margin-bottom: 2rem;
    }
  }

  @media (min-width: $_mq-breakpoint) {
    padding: 0;
    display: grid;
    grid-template-columns: $_d-gridTempColumns;
    grid-template-rows: $_d-gridTempRows;

    #{$_x-wrapperClass} {
      max-width: none;
      width: 100%;
    }

    &::before {
      display: none;
    }

    &::after {
      content: "";
      display: block;
      height: 100%;
      background: url(#{$_f-imageName}) no-repeat $_x-imageBgPositionMed / cover;
      grid-row: span 3;
      margin-top: 0;
    }

    @if $_x-imagePositionHorz == "right" {

      .#{$_x-wrapperClass} {
        grid-row: 2 / 3;
        grid-column: 2 / 3;
      }

      &::after {
        grid-column: 4 / 6;
      }
    }

    @if $_x-imagePositionHorz == "left" {

      .#{$_x-wrapperClass} {
        grid-row: 2 / 3;
        grid-column: 4 / 5;
      }

      &::after {
        grid-column: 1 / 3;
      }
    }
  }

  @media (min-width: $_mq-breakpointLg) {
    grid-template-columns: $_d-gridTempColumnsWide;

    &::after {
      background-position: $_x-imageBgPositionLg;
    }
  }
}


@mixin fullWidth () {
  max-width: none;
  width: 100%;
}