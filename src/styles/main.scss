// import partials used by all pages
@use "styles/sass/shared";

// import partials only used here
// Note: Changed here to use the new @use syntax
@use "utilities/mixins";
@use "utilities/variables";
@use "sass/foundation/config";

// .helloworld {
//     color: red;
// }

// ----------
// General Settings
// ----------

html {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

.wrapper {
  padding-bottom: 2rem;
}

.page-title {
  padding-top: 4rem;
}

.page-title h1,
.intro-wrap h2,
.intro-wrap h3,
.intro-wrap h4,
.intro-wrap p,
.code-block {
  @include mixins.fluidRem("padding-right", 1rem, 4rem);
  @include mixins.fluidRem("padding-left", 1rem, 4rem);
}

.page-title h1 {
  // $_f-fontFamily, $_f-fontWeight, $_f-lineHeight, $_f-letterSpacing, $_c-color
  @include mixins.setFont("Roboto Slab",
  700,
  3rem,
  0.02rem,
  variables.$c-heading-color );
  @include mixins.fluidRem("font-size", 2.5rem, 3.5rem);
  @include mixins.fluidRem("padding-bottom", 2rem, 4rem);
}

.intro-wrap {
  @include mixins.fluidRem("padding-top", 2rem, 3rem);
  @include mixins.fluidRem("padding-bottom", 2rem, 3rem);

  h2 {
    @include mixins.setFont("Roboto Slab",
    300,
    3rem,
    0.02rem,
    variables.$c-heading-color );
    @include mixins.fluidRem("font-size", 2.25rem, 3rem);
    @include mixins.fluidRem("padding-bottom", 1.75rem, 2rem);
  }

  h3 {
    @include mixins.setFont("Roboto Slab",
    700,
    2.5rem,
    0.02rem,
    variables.$c-heading-color );
    @include mixins.fluidRem("font-size", 2rem, 2.5rem);
  }

  p {
    @include mixins.setFont("Roboto",
    300,
    2rem,
    0.02rem,
    variables.$c-neutral-black );
    @include mixins.fluidRem("font-size", 1rem, 1.25rem);

    width: 100%;

    @media screen and (min-width: config.$mq-900) {
      width: 80%;
      margin: 0 auto;
    }
  }
}

.page-title,
.intro-wrap {
  @include mixins.fluidRem("padding-right", 1rem, 4rem);
  @include mixins.fluidRem("padding-left", 1rem, 4rem);
}

// ----------
// Navigation
// ----------
.hamburger-react {
  z-index: 5;
}

.top-nav {
  position: relative;

  .main-menu-btn {
    position: fixed;
    top: 0;
    left: 0;
    height: 3.125rem;
    z-index: 5;
    background-color: variables.$c-btn-primary;
    border: none;
    color: white;
    font-size: 1.5rem;
    padding: 0 1rem;
    width: auto;
    text-align: left;
  }

  .main-menu-overlay {
    height: 100%;
    width: 0;
    position: fixed;
    z-index: 2;
    top: 0;
    left: 0;
    overflow-x: hidden;
    background-color: variables.$c-neutral-gray-dark;
    transition: 0.5s;

    &.show-menu {
      width: 35%;
      max-width: 25rem;
    }
  }
}

.close-btn {
  color: variables.$c-neutral-black;
  text-decoration: none;
  position: absolute;
  top: 1.5rem;
  right: 2.25rem;
  font-size: 4rem;
  transition: 0.3s;

  &:hover,
  &:focus {
    color: variables.$c-text-link;
  }
}

.main-menu {
  position: relative;
  top: 18%;
  width: 100%;
  text-align: center;

  // margin-top: 2rem;

  a {
    color: variables.$c-neutral-black;
    display: block;
    padding: 1rem 0.5rem;
    margin-bottom: 1rem;
    text-decoration: none;
    transition: 0.3s;

    @include mixins.setFont("Roboto",
    700,
    1rem,
    0.02rem,
    variables.$c-neutral-black );
    @include mixins.fluidRem("font-size", 1.125rem, 1.5rem);

    &:visited {
      color: inherit;
    }

    &:hover,
    &:focus {
      background-color: variables.$c-text-link;
      color: white;
    }

    &:active {
      background-color: variables.$c-btn-active;
    }
  }
}

// ----------
// Code Block
// ----------

.code-block {
  button.code-toggle.code-toggle-style {
    border: none;
    border-radius: variables.$b-border-radius;
    background-color: variables.$c-btn-secondary;
    margin-right: 1.5rem;
    transition: all 0.3s;
  }

  button.code-toggle.code-toggle-style:hover,
  button.code-toggle.code-toggle-style:focus {
    background-color: variables.$c-btn-secondary-hover;
    color: white;
  }

  button[css="[object Object]"] {
    border: 2px solid variables.$c-btn-tertiary;
    border-radius: variables.$b-border-radius;
    background-color: transparent;
    color: variables.$c-btn-tertiary;
    vertical-align: middle;
  }

  button[css="[object Object]"]:hover {
    background-color: variables.$c-btn-tertiary;
    color: white;
  }
}

// ----------
// Form Override
// ----------

#mauticform_applyformformapp_qstn_hp_field,
#mauticform_input_surveyformgeneralformsrv_qstn_hp_field,
#mauticform_surveyformgeneralformsrv_c_sms_opt_in_ind,
#mauticform_contentgiveformformcg_qstn_hp_field {
  display: none;
}
